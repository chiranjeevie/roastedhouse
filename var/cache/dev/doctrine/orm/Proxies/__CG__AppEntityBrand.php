<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Brand extends \App\Entity\Brand implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'domain', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'subdomain', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'emailNewClient', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'emailFrom', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'brandName', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'seoName', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'contactPhone', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'contactPhone1', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'contactEmail', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'categoryLimit', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'activeDays', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'courses', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'timeZone', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'domain', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'subdomain', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'emailNewClient', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'emailFrom', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'brandName', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'seoName', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'contactPhone', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'contactPhone1', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'contactEmail', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'categoryLimit', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'activeDays', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'courses', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'timeZone', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Brand' . "\0" . 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Brand $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', []);

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomain(string $domain): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', [$domain]);

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubdomain(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubdomain', []);

        return parent::getSubdomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubdomain(string $subdomain): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubdomain', [$subdomain]);

        return parent::setSubdomain($subdomain);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailNewClient(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailNewClient', []);

        return parent::getEmailNewClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailNewClient(string $emailNewClient): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailNewClient', [$emailNewClient]);

        return parent::setEmailNewClient($emailNewClient);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailFrom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailFrom', []);

        return parent::getEmailFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailFrom(?string $emailFrom): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailFrom', [$emailFrom]);

        return parent::setEmailFrom($emailFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrandName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrandName', []);

        return parent::getBrandName();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrandName(?string $brandName): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrandName', [$brandName]);

        return parent::setBrandName($brandName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeoName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeoName', []);

        return parent::getSeoName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeoName(?string $seoName): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeoName', [$seoName]);

        return parent::setSeoName($seoName);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactPhone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactPhone', []);

        return parent::getContactPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactPhone(?string $contactPhone): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactPhone', [$contactPhone]);

        return parent::setContactPhone($contactPhone);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactPhone1(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactPhone1', []);

        return parent::getContactPhone1();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactPhone1(?string $contactPhone1): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactPhone1', [$contactPhone1]);

        return parent::setContactPhone1($contactPhone1);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactEmail', []);

        return parent::getContactEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactEmail(?string $contactEmail): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactEmail', [$contactEmail]);

        return parent::setContactEmail($contactEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryLimit(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryLimit', []);

        return parent::getCategoryLimit();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryLimit(?int $categoryLimit): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryLimit', [$categoryLimit]);

        return parent::setCategoryLimit($categoryLimit);
    }

    /**
     * {@inheritDoc}
     */
    public function getActiveDays(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActiveDays', []);

        return parent::getActiveDays();
    }

    /**
     * {@inheritDoc}
     */
    public function setActiveDays(?int $activeDays): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActiveDays', [$activeDays]);

        return parent::setActiveDays($activeDays);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeZone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeZone', []);

        return parent::getTimeZone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimeZone(?string $timeZone): \App\Entity\Brand
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimeZone', [$timeZone]);

        return parent::setTimeZone($timeZone);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourses', []);

        return parent::getCourses();
    }

    /**
     * {@inheritDoc}
     */
    public function beforeSave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'beforeSave', []);

        return parent::beforeSave();
    }

    /**
     * {@inheritDoc}
     */
    public function doPreUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doPreUpdate', []);

        return parent::doPreUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created]);

        return parent::setCreatedAt($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated]);

        return parent::setUpdatedAt($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
