<?php return array(PHP_INT_MAX, static function () {

    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
            clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
            clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\CourseRepository',
                ],
                'filterClass' => [
                    1 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\DateFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\RangeFilter',
                    'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\OrderFilter',
                    'ApiPlatform\\Core\\Serializer\\Filter\\PropertyFilter',
                ],
                'properties' => [
                    1 => [
                        'title' => 'partial',
                        'description' => 'partial',
                        'user' => 'exact',
                    ],
                    [
                        'date_of_course',
                    ],
                    [
                        'price',
                    ],
                    [
                        'id',
                        'date_of_course',
                        'title',
                    ],
                ],
                'arguments' => [
                    5 => [
                        'parameterName' => 'properties',
                        'overrideDefaultProperties' => false,
                        'whitelist' => [
                            'id',
                            'title',
                            'user',
                            'content',
                        ],
                    ],
                ],
                'itemOperations' => [
                    6 => [
                        'get' => [
                            'normalization_context' => [
                                'groups' => [
                                    'get-course-with-user',
                                    'get-course-with-category',
                                ],
                            ],
                        ],
                        'put' => [
                            'access_control' => 'is_granted(\'IS_AUTHENTICATED_FULLY\') and object.getUser() == user',
                        ],
                    ],
                ],
                'collectionOperations' => [
                    6 => [
                        'get' => [
                            'normalization_context' => [
                                'groups' => [
                                    'get-course-with-user',
                                    'get-course-with-category',
                                ],
                            ],
                        ],
                        'post' => [
                            'access_control' => 'is_granted(\'IS_AUTHENTICATED_FULLY\')',
                        ],
                    ],
                ],
                'attributes' => [
                    6 => [
                        'order' => [
                            'date_of_course' => 'DESC',
                        ],
                        'denormalization_context' => [
                            'groups' => [
                                'post',
                            ],
                        ],
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
            $o[3],
            $o[4],
            $o[5],
            $o[6],
            $o[7],
        ],
        []
    );

});
